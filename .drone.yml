kind: pipeline
type: docker
name: build

platform:
  os: linux
  arch: amd64

steps:
- name: build-fips-unittest
  image: amarburg/lsdslam-dev-host
  commands:
    - apt update && apt install -y wget
    - cd /drone && wget -O- https://s3.us-west-1.wasabisys.com/marburg/Blackmagic_DeckLink_SDK_11.5_Linux_only.tar.gz | tar xz
    - export BLACKMAGIC_DIR="/drone/Blackmagic_DeckLink_SDK_11.5/Linux/"
    - cd /drone/src
    - ./fips set config linux-make-unittest
    - ./fips build

- name: build-fips-release
  image: amarburg/lsdslam-dev-host
  commands:
    - apt update && apt install -y wget
    - cd /drone && wget -O- https://s3.us-west-1.wasabisys.com/marburg/Blackmagic_DeckLink_SDK_11.5_Linux_only.tar.gz | tar xz
    - export BLACKMAGIC_DIR="/drone/Blackmagic_DeckLink_SDK_11.5/Linux/"
    - cd /drone/src
    - ./fips set config linux-make-release
    - ./fips build

- name: build-ros-melodic
  image: amarburg/drone-ci-ros:melodic
  commands:
    - cd /drone && wget -O- https://s3.us-west-1.wasabisys.com/marburg/Blackmagic_DeckLink_SDK_11.5_Linux_only.tar.gz | tar xz
    - export BLACKMAGIC_DIR="/drone/Blackmagic_DeckLink_SDK_11.5/Linux/"
    - wget -O- https://gitlab.com/amarburg/ros_drone_ci/-/raw/master/bootstrap.sh | /bin/bash
  environment:


# - name: trigger-gitlab-downstream
#   image: plugins/downstream
#   settings:
#     server: https://gitlab.drone.camhd.science
#     fork: true
#     token:
#       from_secret: gitlab_drone_token
#     repositories:
#       - apl-ocean-engineering/oculus_sonar_ros
#
# - name: trigger-github-downstream
#   image: plugins/downstream
#   settings:
#     server: https://github.drone.camhd.science
#     fork: true
#     token:
#       from_secret: github_drone_token
#     repositories:
#       - apl-ocean-engineering/serdp_player

- name: slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
  when:
    status: [ success, failure ]
